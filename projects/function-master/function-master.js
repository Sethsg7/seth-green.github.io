//////////////////////////////////////////////////////////////////////
// Function 1 - Object Values ////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function objectValues(object) {
var array = Object.values(object)
return array;
} 


//////////////////////////////////////////////////////////////////////
// Function 2 - Keys to String ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function keysToString(object) {
    for (var key in object) {
      var arr = Object.keys(object)
      return arr.join(" ")
      }
    }




//////////////////////////////////////////////////////////////////////
// Function 3 - Values to String /////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function valuesToString(object) {
  var arr = [];

  for (var key in object) {
    if (typeof object[key] === 'string') {

      arr.push(object[key])
     
    }
  }
  return arr.join(' ');
}




//////////////////////////////////////////////////////////////////////
// Function 4 - Array or Object //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function arrayOrObject(collection) {
    
    if (Array.isArray(collection) === true) 
     
    {return 'array'} 
   
     else if (typeof collection === 'object') 
    
     { return 'object'}

    };
    







//////////////////////////////////////////////////////////////////////
// Function 5 - Capitalize Word //////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function capitalizeWord(string) {
  return string.charAt(0).toUpperCase() + string.slice(1);
}










//////////////////////////////////////////////////////////////////////
// Function 6 - Capitalize All Words /////////////////////////////////
//////////////////////////////////////////////////////////////////////
function capitalizeAllWords(string) {

  function capHelp(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  }
  return string.split(' ').map(capHelp).join(' ');

}



//////////////////////////////////////////////////////////////////////
// Function 7 - Welcome Message //////////////////////////////////////
//////////////////////////////////////////////////////////////////////
function welcomeMessage(object) {
  if (object.hasOwnProperty('name')) {
    var greet = object.name.charAt(0).toUpperCase() + object.name.slice(1);
    var welcome = "Welcome " + greet + "!"
  }
  return welcome
}




//////////////////////////////////////////////////////////////////////
// Function 8 - Profile Info /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////



function profileInfo(object) {
  var info2 = object.species.charAt(0).toUpperCase() + object.species.slice(1);

  var info = object.name.charAt(0).toUpperCase() + object.name.slice(1);
  
  return info + " " + "is" + " " + "a" + " " + info2
  }
  

//////////////////////////////////////////////////////////////////////
// Function 9 - Maybe Noises /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function maybeNoises(object) {
  if (object.hasOwnProperty('noises') && object.noises.length > 0) {
    return object.noises.join(' ')
  }
  else { return "there are no noises" }
}


  


//////////////////////////////////////////////////////////////////////
// Function 10 - Has Words ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function hasWord(string, word) {
  if (string.includes(word)) {
    return true} 
    else { return false }

}

//////////////////////////////////////////////////////////////////////
// Function 11 - Add Friend //////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function addFriend(name, object) {
  if (object.hasOwnProperty('friends')) {
    object.friends.push(name)
  }
  return object
}

//////////////////////////////////////////////////////////////////////
// Function 12 - Is Friend ///////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function isFriend(name, object) {

  var friendCheck = Object.values(object).join(' ').includes(name);

  if (friendCheck === true) {
    return true
  } else {
    return false
  }

}


//////////////////////////////////////////////////////////////////////
// Function 13 - Non-Friends /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////


function nonFriends(name, array) {
  var returnArray = [];
  var enemies = array.forEach((person) => {
    if(person.name !== name && !person.friends.includes(name)){
              returnArray = [...returnArray,person.name]
  }
})
return returnArray
}






//////////////////////////////////////////////////////////////////////
// Function 14 - Update Object ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function updateObject(object, key, value) {
    object[key] = value;
   
   return object;
   
}








//////////////////////////////////////////////////////////////////////
// Function 15 - Remove Properties ///////////////////////////////////
//////////////////////////////////////////////////////////////////////

function removeProperties(object, array) {

}









//////////////////////////////////////////////////////////////////////
// Function 16 - Dedup ///////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

function dedup(array) {

}











//////////////////////////////////////////////////////////////////////
// DON'T REMOVE THIS CODE ////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

if((typeof process !== 'undefined') &&
   (typeof process.versions.node !== 'undefined')) {
    // here, export any references you need for tests //
    module.exports.objectValues = objectValues;
    module.exports.keysToString = keysToString;
    module.exports.valuesToString = valuesToString;
    module.exports.arrayOrObject = arrayOrObject;
    module.exports.capitalizeWord = capitalizeWord;
    module.exports.capitalizeAllWords = capitalizeAllWords;
    module.exports.welcomeMessage = welcomeMessage;
    module.exports.profileInfo = profileInfo;
    module.exports.maybeNoises = maybeNoises;
    module.exports.hasWord = hasWord;
    module.exports.addFriend = addFriend;
    module.exports.isFriend = isFriend;
    module.exports.nonFriends = nonFriends;
    module.exports.updateObject = updateObject;
    module.exports.removeProperties = removeProperties;
    module.exports.dedup = dedup;
}